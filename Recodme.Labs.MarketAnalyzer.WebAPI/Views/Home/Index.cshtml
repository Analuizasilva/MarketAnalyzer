@model Recodme.Labs.MarketAnalyzer.WebAPI.Models.Home.IndexViewModel
@{ var index = 0;} 
<h1>
    Top 2000 Companies in USA
</h1>

<table class="sortable-table center">
    <thead>
        <tr>
            <th class="numeric-sort">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().MarketAnalyzerRank)</th>
            <th>@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().CompanyName)</th>
            <th >@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().Ticker)</th>
            <th class="numeric-sort">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().StockPrice)</th>
            <th class="numeric-sort">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().Fitness)</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.HomeDataPocos.OrderBy(x => x.MarketAnalyzerRank))
        {
            <tr>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker"> @item.MarketAnalyzerRank </a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@item.CompanyName</a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@item.Ticker</a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@Math.Round(item.StockPrice, 2)</a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@Math.Round((decimal)item.Fitness, 2)</a>
                </td>
            </tr>
            @if (index++ > 100) { break; }
        }

    </tbody>
</table>

@*<table class="table table-hover scrollbar-outer" id="myTable">
    <thead>
        <tr>
            <th class="w-1">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().MarketAnalyzerRank)</th>
            <th class="w-1">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().CompanyName)</th>
            <th class="w-1">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().Ticker) </th>
            <th class="w-1">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().StockPrice)</th>
            <th class="w-1">@Html.DisplayNameFor(item => item.HomeDataPocos.FirstOrDefault().Fitness)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.HomeDataPocos.OrderBy(x=>x.MarketAnalyzerRank))
        {
            <tr>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker"> @item.MarketAnalyzerRank </a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@item.CompanyName</a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@item.Ticker</a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@Math.Round(item.StockPrice, 2)</a>
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Details" asp-route-ticker="@item.Ticker">@Math.Round((decimal)item.Fitness, 2)</a>
                </td>
            </tr>
            @if (index++ > 100) { break; }
            }
    </tbody>
</table>*@


